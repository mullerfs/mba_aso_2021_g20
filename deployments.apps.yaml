apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      alpha.image.policy.openshift.io/resolve-names: '*'
      app.openshift.io/vcs-ref: ""
      app.openshift.io/vcs-uri: https://github.com/mullerfs/blog-django-py
      deployment.kubernetes.io/revision: "8"
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"blog-django-py:latest","namespace":"fiap-aso-g20"},"fieldPath":"spec.template.spec.containers[?(@.name==\"blog-django-py\")].image","pause":"false"}]'
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: "2022-01-17T02:15:13Z"
    generation: 8
    labels:
      app: blog-django-py
      app.kubernetes.io/component: blog-django-py
      app.kubernetes.io/instance: blog-django-py
      app.kubernetes.io/name: python
      app.kubernetes.io/part-of: blog-django-py-app
      app.openshift.io/runtime: python
      app.openshift.io/runtime-version: 3.8-ubi7
    name: blog-django-py
    namespace: fiap-aso-g20
    resourceVersion: "22841960"
    selfLink: /apis/apps/v1/namespaces/fiap-aso-g20/deployments/blog-django-py
    uid: 4fdd2d45-6b2d-4965-8a49-0b381787f54f
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: blog-django-py
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: blog-django-py
          deploymentconfig: blog-django-py
      spec:
        containers:
        - env:
          - name: BLOG_BANNER_COLOR
            value: saddlebrown
          - name: BLOG_SITE_NAME
            value: G20 - ASO - 2021/2022
          image: image-registry.openshift-image-registry.svc:5000/fiap-aso-g20/blog-django-py@sha256:48d495d342247280434a3d775cf6527c9226fa01452973e36eb0065518d61197
          imagePullPolicy: Always
          name: blog-django-py
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2022-01-17T02:16:30Z"
      lastUpdateTime: "2022-01-17T02:16:30Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2022-01-17T02:15:13Z"
      lastUpdateTime: "2022-01-17T02:47:47Z"
      message: ReplicaSet "blog-django-py-5f7b564cfc" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 8
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
