apiVersion: v1
kind: Secret
metadata:
  name: sample-database
type: Opaque
stringData:
  database-name: sampledb
  database-password: sampledb
  database-user: sampledb

---

kind: Service
apiVersion: v1
metadata:
  annotations:
    openshift.io/generated-by: OpenShiftNewApp
    template.openshift.io/expose-uri: 'postgres://{.spec.clusterIP}:{.spec.ports[?(.name=="postgresql")].port}'
  name: sample-database
  creationTimestamp: '2022-01-20T01:43:38Z'
  labels:
    app: sample-database
    app.kubernetes.io/component: sample-database
    app.kubernetes.io/instance: sample-database
    template: postgresql-persistent-template
spec:
  ports:
    - name: postgresql
      protocol: TCP
      port: 5432
      targetPort: 5432
  selector:
    name: sample-database
  type: ClusterIP
  sessionAffinity: None
status:
  loadBalancer: {}

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  annotations:
    volume.beta.kubernetes.io/storage-provisioner: kubernetes.io/cinder
  name: sample-database
  finalizers:
    - kubernetes.io/pvc-protection
  labels:
    app: sample-database
    app.kubernetes.io/component: sample-database
    app.kubernetes.io/instance: sample-database
    template: postgresql-persistent-template
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard
  volumeMode: Filesystem
status:
  phase: Bound
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 1Gi
---

apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations:
    template.alpha.openshift.io/wait-for-ready: "true"
  creationTimestamp: "2022-01-20T00:44:36Z"
  generation: 2
  labels:
    app: sample-database
    app.kubernetes.io/component: sample-database
    app.kubernetes.io/instance: sample-database
    template: postgresql-persistent-template
  name: sample-database
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    name: sample-database
  strategy:
    activeDeadlineSeconds: 21600
    recreateParams:
      timeoutSeconds: 600
    resources: {}
    type: Recreate
  template:
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
      creationTimestamp: null
      labels:
        name: sample-database
    spec:
      containers:
      - env:
        - name: POSTGRESQL_USER
          valueFrom:
            secretKeyRef:
              key: database-user
              name: sample-database
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-password
              name: sample-database
        - name: POSTGRESQL_DATABASE
          valueFrom:
            secretKeyRef:
              key: database-name
              name: sample-database
        image: image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:c58b255376a4c1f6744b56389f0984f465b74e9c6a62626894f850ab74dec0ea
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /usr/libexec/check-container
            - --live
          failureThreshold: 3
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        name: postgresql
        ports:
        - containerPort: 5432
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /usr/libexec/check-container
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            memory: 512Mi
        securityContext:
          capabilities: {}
          privileged: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/pgsql/data
          name: sample-database-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: sample-database-data
        persistentVolumeClaim:
          claimName: sample-database
  test: false
  triggers:
  - imageChangeParams:
      automatic: true
      containerNames:
      - postgresql
      from:
        kind: ImageStreamTag
        name: postgresql:10-el8
        namespace: openshift
      lastTriggeredImage: image-registry.openshift-image-registry.svc:5000/openshift/postgresql@sha256:c58b255376a4c1f6744b56389f0984f465b74e9c6a62626894f850ab74dec0ea
    type: ImageChange
  - type: ConfigChange
---

apiVersion: v1
items:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: "2022-01-20T02:37:30Z"
    generation: 1
    labels:
      app: blog-django-py
      app.kubernetes.io/component: blog-django-py
      app.kubernetes.io/instance: blog-django-py
    name: blog-django-py
  spec:
    lookupPolicy:
      local: false
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
---
apiVersion: v1
items:
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: "2022-01-20T02:37:31Z"
    labels:
      app: blog-django-py
      app.kubernetes.io/component: blog-django-py
      app.kubernetes.io/instance: blog-django-py
    name: blog-django-py
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: blog-django-py:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        uri: https://github.com/mullerfs/blog-django-py
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: python:3.8
          namespace: openshift
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: W71gtlUGi5uFkpFVic_a
      type: GitHub
    - generic:
        secret: C9Qf5WH5teOKXQkEBVCG
      type: Generic
    - type: ConfigChange
    - imageChange:
        lastTriggeredImageID: image-registry.openshift-image-registry.svc:5000/openshift/python@sha256:210326ea7d1a940d7e8f057cc96a6115c8443658b91a95d6c0ddc91ad80566cd
      type: ImageChanges
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
---
apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: blog-django-py
      app.kubernetes.io/component: blog-django-py
      app.kubernetes.io/instance: blog-django-py
    name: blog-django-py
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deployment: blog-django-py
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
---
apiVersion: v1
kind: Secret
metadata:
  name: django-secrets
type: Opaque
stringData:
  django-user: g20
  django-password: g20
  django-email: g20@example.com
---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"blog-django-py:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"blog-django-py\")].image"}]'
    openshift.io/generated-by: G20-Script
  labels:
    app: blog-django-py
    app.kubernetes.io/component: blog-django-py
    app.kubernetes.io/instance: blog-django-py
    app.kubernetes.io/name: python
    app.openshift.io/runtime: python
  name: blog-django-py
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      deployment: blog-django-py
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        deployment: blog-django-py
    spec:
      containers:
      - env:
        - name: BLOG_BANNER_COLOR
          value: purple
        - name: BLOG_SITE_NAME
          value: G20 - ASO - 2021/2022
        - name: DATABASE_URL
          value: postgresql://sampledb:sampledb@sample-database:5432/sampledb
        - name: DJANGO_ADMIN_USERNAME
          valueFrom:
            secretKeyRef:
              key: django-user
              name: django-secrets
        - name: DJANGO_ADMIN_EMAIL
          valueFrom:
            secretKeyRef:
              key: django-email
              name: django-secrets
        - name: DJANGO_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: django-password
              name: django-secrets
        image: quay.io/mullerfs/blog-django-py
        imagePullPolicy: IfNotPresent
        name: blog-django-py
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      progressDeadlineSeconds: 600

---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: blog-django-py
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: blog-django-py
  minReplicas: 2
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          averageUtilization: 50
          type: Utilization

---
apiVersion: v1
items:
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: blog-django-py
      app.kubernetes.io/component: blog-django-py
      app.kubernetes.io/instance: blog-django-py
      app.kubernetes.io/name: python
      app.kubernetes.io/part-of: blog-django-py-app
      app.openshift.io/runtime: python
      app.openshift.io/runtime-version: 3.8-ubi7
    name: blog-django-py
  spec:
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: blog-django-py
      weight: 100
    wildcardPolicy: None
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
